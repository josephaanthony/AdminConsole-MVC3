@model AdminConsole.Models.TargetContainer

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@if (ViewData.ContainsKey("Error"))
{
    <div style="color:Red">
        @(ViewData["Error"].ToString())
    </div>    
}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>TargetContainer</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Sequence)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sequence)
            @Html.ValidationMessageFor(model => model.Sequence)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InheritsParent)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InheritsParent)
            @Html.ValidationMessageFor(model => model.InheritsParent)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExtendedProperty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExtendedProperty)
            @Html.ValidationMessageFor(model => model.ExtendedProperty)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentTargetContainer_Id, "ParentTargetContainer")
        </div>
        <div class="editor-field">
            @Html.DisplayText("ParentTargetContainer_Id")
            @Html.Hidden("ParentTargetContainer_Id")
@*            @Html.EditorFor(model => model.ParentTargetContainer_Id)
*@            @Html.ValidationMessageFor(model => model.ParentTargetContainer_Id)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DesktopType_DesktopCode, "DesktopType")
        </div>
        <div class="editor-field">
            @Html.DisplayText("DesktopType_DesktopCode")
            @Html.Hidden("DesktopType_DesktopCode")
            
@*            @Html.DropDownList("DesktopType_DesktopCode", String.Empty)
*@            @Html.ValidationMessageFor(model => model.DesktopType_DesktopCode)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    @Html.ActionLink("Back to Sitemap", "Index", "SiteMap", new { desktopType= ("DesktopType_DesktopCode")}, null)
</div>
